/** semitones per musical mode */
export const modes = {
    Ionian: [0, 2, 2, 1, 2, 2, 2, 1],
    Dorian: [0, 2, 1, 2, 2, 2, 1, 2],
    Phrygian: [0, 1, 2, 2, 2, 1, 2, 2],
    Lydian: [0, 2, 2, 2, 1, 2, 2, 1],
    Mixolydian: [0, 2, 1, 2, 2, 1, 2, 2],
    Aeolian: [0, 2, 1, 2, 2, 1, 2, 2],
    Locrian: [0, 1, 2, 2, 1, 2, 2, 2],
};

// how do I convert selected root note into starting point?
// take root and ask for next in mode (+1 or +2)
// How do I iterate to next in Map?
// map.next(), check is root; if not, go to next
// when found, get next num in mode and go that many next()

/**
 * Map of frequencies where key is the specific note and value is the frequency.
 * 'C0', 'C#, 'D0', 'Eb0', 'E0', 'F0', 'F#, 'G0', 'G#, 'A0', 'Bb0', 'B0', 'C1', 'C#, 'D1', 'Eb1', 'E1', 'F1', 'F#, 'G1', 'G#, 'A1', 'Bb1', 'B1', 'C2', 'C#, 'D2', 'Eb2', 'E2', 'F2', 'F#, 'G2', 'G#, 'A2', 'Bb2', 'B2', 'C3', 'C#, 'D3', 'Eb3', 'E3', 'F3', 'F#, 'G3', 'G#, 'A3', 'Bb3', 'B3', 'C4', 'C#, 'D4', 'Eb4', 'E4', 'F4', 'F#, 'G4', 'G#, 'A4', 'Bb4', 'B4', 'C5', 'C#, 'D5', 'Eb5', 'E5', 'F5', 'F#, 'G5', 'G#, 'A5', 'Bb5', 'B5', 'C6', 'C#, 'D6', 'Eb6', 'E6', 'F6', 'F#, 'G6', 'G#, 'A6', 'Bb6', 'B6', 'C7', 'C#, 'D7', 'Eb7', 'E7', 'F7', 'F#, 'G7', 'G#, 'A7', 'Bb7', 'B7', 'C8', 'C#, 'D8', 'Eb8', 'E8', 'F8', 'F#, 'G8', 'G#, 'A8', 'Bb8', 'B8'
 * @type {[string, number]}
 */
export const noteMap = [
    ['C0', 16.35],
    ['C#0', 17.32],
    ['D0', 18.35],
    ['Eb0', 19.45],
    ['E0', 20.6],
    ['F0', 21.83],
    ['F#0', 23.12],
    ['G0', 24.5],
    ['G#0', 25.96],
    ['A0', 27.5],
    ['Bb0', 29.14],
    ['B0', 30.87],
    ['C1', 32.7],
    ['C#1', 34.65],
    ['D1', 36.71],
    ['Eb1', 38.89],
    ['E1', 41.2],
    ['F1', 43.65],
    ['F#1', 46.25],
    ['G1', 49.0],
    ['G#1', 51.91],
    ['A1', 55.0],
    ['Bb1', 58.27],
    ['B1', 61.74],
    ['C2', 65.41],
    ['C#2', 69.3],
    ['D2', 73.42],
    ['Eb2', 77.78],
    ['E2', 82.41],
    ['F2', 87.31],
    ['F#2', 92.5],
    ['G2', 98.0],
    ['G#2', 103.8],
    ['A2', 110.0],
    ['Bb2', 116.5],
    ['B2', 123.5],
    ['C3', 130.8],
    ['C#3', 138.6],
    ['D3', 146.8],
    ['Eb3', 155.6],
    ['E3', 164.8],
    ['F3', 174.6],
    ['F#3', 185.0],
    ['G3', 196.0],
    ['G#3', 207.7],
    ['A3', 220.0],
    ['Bb3', 233.1],
    ['B3', 246.9],
    ['C4', 261.6],
    ['C#4', 277.2],
    ['D4', 293.7],
    ['Eb4', 311.1],
    ['E4', 329.6],
    ['F4', 349.2],
    ['F#4', 370.0],
    ['G4', 392.0],
    ['G#4', 415.3],
    ['A4', 440.0],
    ['Bb4', 466.2],
    ['B4', 493.9],
    ['C5', 523.3],
    ['C#5', 554.4],
    ['D5', 587.3],
    ['Eb5', 622.3],
    ['E5', 659.3],
    ['F5', 698.5],
    ['F#5', 740.0],
    ['G5', 784.0],
    ['G#5', 830.6],
    ['A5', 880.0],
    ['Bb5', 932.3],
    ['B5', 987.8],
    ['C6', 1047],
    ['C#6', 1109],
    ['D6', 1175],
    ['Eb6', 1245],
    ['E6', 1319],
    ['F6', 1397],
    ['F#6', 1480],
    ['G6', 1568],
    ['G#6', 1661],
    ['A6', 1760],
    ['Bb6', 1865],
    ['B6', 1976],
    ['C7', 2093],
    ['C#7', 2217],
    ['D7', 2349],
    ['Eb7', 2489],
    ['E7', 2637],
    ['F7', 2794],
    ['F#7', 2960],
    ['G7', 3136],
    ['G#7', 3322],
    ['A7', 3520],
    ['Bb7', 3729],
    ['B7', 3951],
    ['C8', 4186],
    ['C#8', 4435],
    ['D8', 4699],
    ['Eb8', 4978],
    ['E8', 5274],
    ['F8', 5588],
    ['F#8', 5920],
    ['G8', 6272],
    ['G#8', 6645],
    ['A8', 7040],
    ['Bb8', 7459],
    ['B8', 7902],
];
